name: CI/CD
on:
  pull_request:
    branches: [staging]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Test applicaiton
        run: npm run test
  approve:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Approve pull request
        uses: andrewmusgrave/automatic-pull-request-review@0.0.2
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          event: APPROVE
          body: "Thank you dependabot ðŸŽŠ"
  build-and-push-on-dockerhub:
    needs: approve
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build the tagged Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/handytec-webapp:$(node -p "require('./package.json').version") .

      - name: Push the tagged Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/handytec-webapp:$(node -p "require('./package.json').version")
  deploy-on-heroku:
    needs: approve
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy on Heroku
        uses: akhileshns/heroku-deploy@v3.4.6
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          usedocker: true
          docker_build_args: |
            NODE_ENV
            PORT
          branch: staging
          healthcheck: "https://${{secrets.HEROKU_APP_NAME}}.herokuapp.com/health"
          checkstring: "ok"
          delay: 5
        env:
          NODE_ENV: staging
          PORT: 3000
  changelog:
    needs: approve
    name: create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
  release:
    needs: approve
    name: setup release
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v1
      - name: setup Node
        uses: actions/setup-node@v1
      - name: package-version-to-git-tag
        uses: pkgdeps/action-package-version-to-git-tag@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"
